<FluentStack Orientation="Orientation.Vertical" Width="100%">
    <FluentLabel Typo="Typography.Body"><strong>@Label</strong></FluentLabel>
    <FluentTextArea Value="@Value"
                    ValueChanged="OnValueChanged"
                    Style="width: 100%;"
                    Placeholder="@PlaceHolder"
                    Rows="@Rows"
                    Immediate=true
                    Resize="TextAreaResize.Vertical"
                    Disabled="@Disable" />



</FluentStack>

@code {
    [Parameter]
    public int Rows { get; set; } = 2;
    [Parameter]
    public bool Disable { get; set; } = false;
    [Parameter]
    public string Label { get; set; } = string.Empty;
    [Parameter]
    public string PlaceHolder { get; set; } = string.Empty;
    [Parameter]
    public string Value { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }
    [Parameter]

    public EventCallback Validate { get; set; }

    [Parameter]
    public EventCallback<string> Change { get; set; }

    public async Task OnValueChanged(string value)
    {
        Value = value;
        await ValueChanged.InvokeAsync(Value);

        if (Change.HasDelegate) await Change.InvokeAsync(Value);
        if (Validate.HasDelegate) await Validate.InvokeAsync();

    }
}
