@typeparam TValue
<FluentStack Orientation="Orientation.Vertical" Width="100%">
    <FluentLabel Typo="Typography.Body"><strong>@Label</strong></FluentLabel>
    <FluentSelect TOption="TValue"
                  Items="@Items"
                  Id="people-listbox"
                  Width="100%"
                  Height="350px"
                  Placeholder="Make a selection..."
                  OptionText="@OptionText"
                  SelectedOption="@Value"
                  Immediate=true
                  SelectedOptionChanged="OnValueChanged" />



</FluentStack>

@code {
    [Parameter]
    public List<TValue> Items { get; set; } = new();
    [Parameter]
    public bool Disable { get; set; } = false;
    [Parameter]
    public string Label { get; set; } = string.Empty;
    [Parameter]
    public string PlaceHolder { get; set; } = string.Empty;
    [Parameter]
    public TValue Value { get; set; } = default(TValue)!;
    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }
    [Parameter]
    public Func<TValue, string?> OptionText { get; set; } = null!;
    [Parameter]

    public EventCallback Validate { get; set; }

    [Parameter]
    public EventCallback<TValue> Change { get; set; }

    public async Task OnValueChanged(TValue value)
    {
        Value = value;
        await ValueChanged.InvokeAsync(Value);

        if (Change.HasDelegate) await Change.InvokeAsync(Value);
        if (Validate.HasDelegate) await Validate.InvokeAsync();

    }
}
