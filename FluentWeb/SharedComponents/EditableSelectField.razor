@typeparam T

@if (IsEditable)
{
   
    <div class="select-field" style="display: flex; width: 100%; height: 100%;">
        <select value="@Value?.ToString()" @onchange="HandleInput" style="flex: 1; width: 100%; height: 100%; box-sizing: border-box; padding: 8px; font-size: inherit;" class="soft-border">
            @if (AllowNull)
            {
                <option value="">-- Seleccione una opción --</option>
            }
            @foreach (var option in Options)
            {
                <option value="@option.Value">@option.Text</option>
            }
        </select>
    </div>
  
}
else
{
    <span>@(Value != null ? Options.FirstOrDefault(o => o.Value.Equals(Value.ToString()))?.Text : "N/A")</span>
}
<style>
    .select-field select {
        padding: 5px;
        border-radius: 4px;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        transition: border-color 0.3s ease;
    }

        .select-field select:focus {
            border-color: #007bff;
            outline: none;
        }

    .soft-border {
        border: 1px solid rgba(0, 0, 0, 0.1);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        padding: 1px;
        background-color: #ffffff;
        transition: all 0.3s ease;
    }
</style>
@code {
    [Parameter] public T Value { get; set; }
    [Parameter] public EventCallback<T> OnValueChanged { get; set; }
    [Parameter] public bool IsEditable { get; set; }
    [Parameter] public List<SelectOption> Options { get; set; } = new();
    [Parameter] public bool AllowNull { get; set; } = false;

    private async Task HandleInput(ChangeEventArgs e)
    {
        var selectedValue = e.Value?.ToString();
        if (string.IsNullOrEmpty(selectedValue) && AllowNull)
        {
            await OnValueChanged.InvokeAsync(default);
        }
        else
        {
            var newValue = (T)Convert.ChangeType(selectedValue, typeof(T));
            await OnValueChanged.InvokeAsync(newValue);
        }
    }

    public class SelectOption<T>
    {
        public T Value { get; set; }
        public string Text { get; set; }
    }
}