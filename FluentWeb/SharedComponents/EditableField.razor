@typeparam T

@if (IsEditable)
{

    <input type="text" class="select-field"
           value="@Value?.ToString()"
           @onchange="HandleChange"
           @oninput="HandleChange"
           style="flex: 1; width: 100%; height: 100%; box-sizing: border-box; padding: 8px; font-size: inherit;" />
}
else
{
    <span>@Value?.ToString()</span>
}
<style>
    .select-field select {
        padding: 2px;
        border-radius: 2px;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        transition: border-color 0.3s ease;
    }

        .select-field select:focus {
            border-color: #007bff;
            outline: none;
        }
</style>

@code {
    [Parameter] public T? Value { get; set; }
    [Parameter] public EventCallback<T?> OnValueChanged { get; set; }
    [Parameter] public EventCallback<T?> OnInputChanged { get; set; }
    [Parameter] public bool IsEditable { get; set; }

    private async Task HandleChange(ChangeEventArgs e)
    {
        var newValue = (T?)Convert.ChangeType(e.Value, typeof(T?));
        await OnValueChanged.InvokeAsync(newValue);
    }
}