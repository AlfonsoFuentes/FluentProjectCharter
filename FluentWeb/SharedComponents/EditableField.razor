@typeparam T

@if (IsEditable)
{
    <div style="display: flex; width: 100%; height: 100%;">

        <input type="text" class="select-field"
               value="@Value?.ToString()"
               @onchange="HandleChange"
               @oninput="HandleChange"
               style="flex: 1; box-sizing: border-box;  font-size: inherit;" />


    </div>

    
}
else
{
    <span>@Value?.ToString()</span>
}
<style>
    .select-field {
        padding: 2px;
        border-radius: 2px;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        transition: border-color 0.3s ease;
        width:100%;
        height:100%;
    }

        .select-field:focus {
            border-color: #007bff;
            outline: none;
        }
</style>

@code {
    [Parameter] public T? Value { get; set; }
    [Parameter] public EventCallback<T?> OnValueChanged { get; set; }
    [Parameter] public EventCallback<T?> OnInputChanged { get; set; }
    [Parameter] public bool IsEditable { get; set; }

    private async Task HandleChange(ChangeEventArgs e)
    {
        var newValue = (T?)Convert.ChangeType(e.Value, typeof(T?));
        await OnValueChanged.InvokeAsync(newValue);
    }
}