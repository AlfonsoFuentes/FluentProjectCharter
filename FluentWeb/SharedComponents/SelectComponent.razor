@typeparam T
<FluentStack Orientation="Orientation.Vertical" Width="100%">
    <FluentLabel Typo="Typography.Body"><strong>@Label</strong></FluentLabel>
    <FluentSelect TOption="T"
                  Items="@Items"
                  Id="people-listbox"
                  Width="100%"
                  Height="350px"
                  Placeholder="Make a selection..."
                  OptionText="@OptionText"
                  SelectedOption="@Value" 
                  SelectedOptionChanged="OnChangeSelectedOption" />

</FluentStack>

@code {
    [Parameter]
    public string Label { get; set; } = string.Empty;
    [Parameter]
    public T Value { get; set; } = default(T)!;
    [Parameter]
    public EventCallback<T> ValueChanged { get; set; }
    [Parameter]
    public Func<T, string?> OptionText { get; set; } = null!;
    [Parameter]
    public List<T> Items { get; set; } = new();
    [Parameter]
    public EventCallback Validate { get; set; }
    [Parameter]

    public EventCallback Change { get; set; }
    async Task OnChangeSelectedOption(T value)
    {
        Value = value;
        await ValueChanged.InvokeAsync(value);
        if (Change.HasDelegate) await Change.InvokeAsync();
        if (Validate.HasDelegate) await Validate.InvokeAsync();
        StateHasChanged();
    }



}
