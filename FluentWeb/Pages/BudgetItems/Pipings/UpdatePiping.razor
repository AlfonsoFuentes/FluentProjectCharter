@page "/UpdatePipings/{Id:guid}/{ProjectId:guid}"
@using Shared.Models.BudgetItems.Pipings.Requests



<EditTemplate @ref=Form TItem="UpdatePipingRequest" @bind-Model=@Model
              Title="Edit Piping">
    <Content>
        <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px; ">
            <FluentGridItem xs="12" sm="12" md="7">
                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 2px;width:100%; ">
                    @* //fila *@
                    <FluentGridItem xs="12" sm="12" md="12">
                        <TextArea Label="Name"
                                  @bind-Value=@Model.Name
                                  Rows="2"
                                  Placeholder="Define name"
                                  Validate="Form.ValidateAsync"></TextArea>
                        <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
                    </FluentGridItem>
                    @* //fila *@
                    <FluentGridItem xs="12" sm="12" md="4">
                        <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px;width:100%; ">
                            <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px;width:100%; ">
                                <FluentGridItem xs="12">
                                    <NumberField Label="Material unitary cost, USD"
                                                 @bind-Value=@Model.MaterialUnitaryCost
                                                 Placeholder="Define Material unitary cost, USD"
                                                 Validate="Form.ValidateAsync"></NumberField>

                                </FluentGridItem>
                                <FluentGridItem xs="12">
                                    <NumberField Label="Material Length equivalent"
                                                 @bind-Value=@Model.MaterialQuantity
                                                 Placeholder="Define Material length, mts"
                                                 Validate="Form.ValidateAsync"></NumberField>

                                </FluentGridItem>
                                <FluentGridItem xs="12">
                                    <NumberField Label="Labor Unitary cost, USD/day"
                                                 @bind-Value=@Model.LaborUnitaryCost
                                                 Placeholder="Define Labor unitary cost/day, USD"
                                                 Validate="Form.ValidateAsync"></NumberField>

                                </FluentGridItem>
                                <FluentGridItem xs="12">
                                    <NumberField Label="Number of days, day"
                                                 @bind-Value=@Model.LaborQuantity
                                                 Placeholder="Define Labor, days"
                                                 Validate="Form.ValidateAsync"></NumberField>

                                </FluentGridItem>

                            </FluentGrid>

                            <FluentGridItem xs="12">
                                <FluentLabel>@Model.sBudget</FluentLabel>
                                <ValidationMessage For="() => Model.Budget" style="color:red; font-size:x-small;" />
                            </FluentGridItem>
                            <FluentGridItem xs="12">
                                <FluentButton Appearance="Appearance.Accent" OnClick="@(()=>ShowDetails=!ShowDetails)">
                                    @(ShowDetails ? "Hide Details" : "Show Details")
                                </FluentButton>


                            </FluentGridItem>

                        </FluentGrid>
                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="12" md="4">
                        @if (ShowDetails)
                        {
                            <FluentGridItem xs="12">
                                <TextBox Label="Diameter"
                                         @bind-Value=@Model.Diameter
                                         Placeholder="Define Diameter"
                                         Validate="Form.ValidateAsync"></TextBox>
                            </FluentGridItem>
                            <FluentGridItem xs="12">
                                <TextBox Label="Tag Number"
                                         @bind-Value=@Model.TagNumber
                                         Placeholder="Define Tag Nummber"
                                         Validate="Form.ValidateAsync"></TextBox>
                            </FluentGridItem>
                            <FluentGridItem xs="12">
                                <TextBox Label="Fluid Code"
                                         @bind-Value=@Model.FluidCodeName
                                         Placeholder="Define Fluid Code"
                                         Validate="Form.ValidateAsync"></TextBox>
                            </FluentGridItem>
                            <FluentGridItem xs="12">
                                <FluentCheckbox @bind-Value="@Model.Insulation" Label="Has Insulation?" />
                            </FluentGridItem>
                        }




                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="12" md="4">
                        @if (ShowDetails)
                        {
                            <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px; ">
                                Aqui destino y final
                            </FluentGrid>
                        }

                    </FluentGridItem>

                </FluentGrid>


            </FluentGridItem>
            <FluentGridItem xs="12" sm="12" md="5">
                @if (ShowDetails)
                {
                }
            </FluentGridItem>


        </FluentGrid>

    </Content>

</EditTemplate>

@code {
    EditTemplate<UpdatePipingRequest> Form = null!;
    int Spacing = 1;
    JustifyContent Justification = JustifyContent.SpaceBetween;
    bool ShowDetails = false;
    void OnBreakpointEnterHandler(GridItemSize size)
    {

    }
}
