@page "/ApproveProject/{Id:guid}"
@*
<EditTemplate @ref=Form TItem="ApproveProjectRequest" @bind-Model=@Model
              Title="Approve Project">
    <Content>
       <MudGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px; ">
            <MudItem  xs="12" sm="12" md="6">
                <TextArea Label="Name"
                          @bind-Value=@Model.Name
                          Rows="3"
                          Placeholder="Define name"
                          Validate="Form.ValidateAsync"></TextArea>
                <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
            </MudItem >
            <MudItem  xs="12" sm="12" md="6">

            </MudItem >
            <MudItem  xs="12" sm="12" md="4">
                <MudGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px; ">
                    <MudItem  xs="12">
                        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="1" Width="100%">
                            <FluentSelect TOption="ProjectNeedTypeEnum"
                                          Label="Select Project Need"
                                          Items="@ProjectNeedTypeEnum.List"
                                          Id="people-listbox"
                                          Width="60%"
                                          Height="350px"
                                          @onchange=@ChangeSelectProjectNeed
                                          Placeholder="Make a selection..."
                                          OptionValue="@(p => p.Name)"
                                          OptionText="@(p => p.Name)"
                                          @bind-Value="@Model.ProjectNeedType.Name"
                                          @bind-SelectedOption="@Model.ProjectNeedType" />


                            <ValidationMessage For="() => Model.ProjectNeedType" style="color:red; font-size:x-small;" />
                        </FluentStack>
                    </MudItem >
                    <MudItem  xs="12">
                  
                    </MudItem >
                    <MudItem  xs="12">
                        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="1" Width="100%">

                        

                        </FluentStack>
                    </MudItem >
                </MudGrid>


            </MudItem >
            <MudItem  xs="12" sm="12" md="4">
                <MudGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style=" padding: 4px; ">
                    <MudItem  xs="12">
                        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="3" Width="100%">
                            <FluentDatePicker Label="Project Initial Date" AriaLabel="To" @bind-Value="@Model.InitialProjectDate" DoubleClickToDate="@Model.InitialProjectDate" />
                            <ValidationMessage For="() => Model.InitialProjectDate" style="color:red; font-size:x-small;" />
                        </FluentStack>
                    </MudItem >
                    <MudItem  xs="12">
                        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center"  Width="100%">
                            <TextBox Label="Project Number"
                                      @bind-Value=@Model.ProjectNumber
                                      
                                      Placeholder="Define Project Number"
                                      Validate="Form.ValidateAsync"></TextBox>
                            <ValidationMessage For="() => Model.ProjectNumber" style="color:red; font-size:x-small;" />
                            <ValidationMessage For="() => Model.BudgetItems" style="color:red; font-size:x-small;" />
                        </FluentStack>
                    </MudItem >
                    <MudItem  xs="12">

                    </MudItem >
                </MudGrid>
            </MudItem >
            <MudItem  xs="12" sm="12" md="4">
                <NumberField Label="%Engineering" @bind-Value=@Model.PercentageEngineering Validate="Form.ValidateAsync"></NumberField>
                <ValidationMessage For="() => Model.PercentageEngineering" style="color:red; font-size:x-small;" />
                <NumberField Label="%Contingency" @bind-Value=@Model.PercentageContingency Validate="Form.ValidateAsync"></NumberField>
                <ValidationMessage For="() => Model.PercentageContingency" style="color:red; font-size:x-small;" />
                <FluentCheckbox Label="Is Productive Asset?" @bind-Value=@Model.IsProductiveAsset></FluentCheckbox>
                @if (!Model.IsProductiveAsset)
                {
                    <NumberField Label="%Tax (VAT)" @bind-Value=@Model.PercentageTaxProductive Validate="Form.ValidateAsync"></NumberField>
                    <ValidationMessage For="() => Model.PercentageTaxProductive" style="color:red; font-size:x-small;" />
                }
            </MudItem >

        </MudGrid>
    </Content>

</EditTemplate>
 *@
@code {
    // EditTemplate<ApproveProjectRequest> Form = null!;

    // int Spacing = 3;
    // JustifyContent Justification = JustifyContent.FlexStart;

    // async Task ChangeSelectProjectNeed(ChangeEventArgs args)
    // {
    //     if (args == null) return;
    //     Model.ProjectNeedType = ProjectNeedTypeEnum.GetType(args!.Value!.ToString()!);
    //     await Form.ValidateAsync();
    // }
   

   
}
