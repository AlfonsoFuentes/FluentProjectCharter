@page "/CreateSuppliers"

<CreateTemplate @ref=Form TItem="CreateSupplierRequest" @bind-Model="@Model"
                Title="Create Supplier">
    <Content>
        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Stretch">
            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Start" VerticalAlignment="VerticalAlignment.SpaceBetween">
                <TextBox Label="Name"
                         @bind-Value=@Model.Name
                         Placeholder="Define name"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
                <TextBox Label="Nick Name"
                         @bind-Value=@Model.NickName
                         Placeholder="Define Nick Name"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.NickName" style="color:red; font-size:x-small;" />
                <TextBox Label="Vendor Code"
                         @bind-Value=@Model.VendorCode
                         Placeholder="Define Vendor Code"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.VendorCode" style="color:red; font-size:x-small;" />
                <TextBox Label="Tax Code LD"
                         @bind-Value=@Model.TaxCodeLD
                         Placeholder="Define Tax Code LD"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.TaxCodeLD" style="color:red; font-size:x-small;" />
                <TextBox Label="Tax Code LP"
                         @bind-Value=@Model.TaxCodeLP
                         Placeholder="Define Tax Code LP"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.TaxCodeLP" style="color:red; font-size:x-small;" />
            </FluentStack>
            <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="HorizontalAlignment.Start" VerticalAlignment="VerticalAlignment.SpaceBetween">
                <FluentSelect TOption="CurrencyEnum"
                              Label="Select Supplier Currency"
                              Items="@CurrencyEnum.List"
                              Id="people-listbox"
                              Width="100%"
                              @onchange=@ChangeSelectSupplierCurrency
                              Placeholder="Make a selection..."
                              OptionValue="@(p => p.Name)"
                              OptionText="@(p => p.Name)"
                              @bind-Value="@Model.SupplierCurrency.Name"
                              @bind-SelectedOption="@Model.SupplierCurrency" />


                <ValidationMessage For="() => Model.SupplierCurrency" style="color:red; font-size:x-small;" />
                <TextBox Label="Contact Name"
                         @bind-Value=@Model.ContactName
                         Placeholder="Define Contact Name"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.ContactName" style="color:red; font-size:x-small;" />
                <TextBox Label="Contact Email"
                         @bind-Value=@Model.ContactEmail
                         InputMode="InputMode.Email"
                         TextFieldType="TextFieldType.Email"
                         Placeholder="Define Contact Email"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.ContactEmail" style="color:red; font-size:x-small;" />
                <TextBox Label="Phone Number"
                         @bind-Value=@Model.PhoneNumber
                         TextFieldType="TextFieldType.Tel"
                         InputMode="InputMode.Telephone"
                         Placeholder="Define Phone Number"
                         Validate="Form.ValidateAsync"></TextBox>
                <ValidationMessage For="() => Model.PhoneNumber" style="color:red; font-size:x-small;" />
            </FluentStack>
        </FluentStack>


    </Content>

</CreateTemplate>

@code {
    CreateTemplate<CreateSupplierRequest> Form = null!;
    async Task ChangeSelectSupplierCurrency(ChangeEventArgs args)
    {
        if (args == null) return;
        Model.SupplierCurrency = CurrencyEnum.GetType(args!.Value!.ToString()!);
        await Form.ValidateAsync();
    }
}
