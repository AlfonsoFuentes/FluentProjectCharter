@page "/UpdateStakeHolderInsideProject/{Id:guid}/{ProjectId:guid}"

<EditTemplate @ref=EditForm TItem="UpdateStakeHolderInsideProjectRequest" @bind-Model="@Model"
              Title="Edit StakeHolder to Project">
    <Content>
        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
            <FluentLabel Typo="Typography.Body" Style="overflow-wrap: break-word;">@Model.StakeHolder.Name</FluentLabel>
            <FluentSelect TOption="StakeHolderRoleEnum"
                          Label="Select Role"
                          Items="@StakeHolderRoleEnum.List"
                          Id="people-listbox"
                          Width="60%"
                          Height="350px"
                          @onchange=@ChangeRole
                          Placeholder="Make a selection..."
                          OptionValue="@(p => p.Name)"
                          OptionText="@(p => p.Name)"
                          @bind-Value="@Model.Role.Name"
                          @bind-SelectedOption="@Model.Role" />


            <ValidationMessage For="() => Model.Role" style="color:red; font-size:x-small;" />
        </FluentStack>
       
    </Content>

</EditTemplate>

@code {
    EditTemplate<UpdateStakeHolderInsideProjectRequest> EditForm = null!;
    
    async Task ChangeRole(ChangeEventArgs args)
    {
        if (args == null) return;
        Model.Role = StakeHolderRoleEnum.GetType(args!.Value!.ToString()!);
        await EditForm.ValidateAsync();
    }
}
