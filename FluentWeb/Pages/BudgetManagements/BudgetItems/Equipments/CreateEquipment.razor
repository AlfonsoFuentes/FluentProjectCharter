@page "/CreateEquipments/{ProjectId:guid}/{GanttTaskId:guid}"
@page "/CreateEquipments/{ProjectId:guid}"
@using Shared.Models.BudgetItems.IndividualItems.Equipments.Requests


<CreateTemplate @ref=Form TItem="CreateEquipmentRequest" @bind-Model="@Model"
                Title="Create Equipment">
    <Content>
        <FluentStack Orientation="Orientation.Vertical" Style="width:100%" VerticalGap="2">
            <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;width:100%">

                <FluentGridItem xs="12" sm="12" md="6">
                    <TextBox Label="Name"
                             @bind-Value=@Model.Name
                             Placeholder="Define name"
                             Validate="Form.ValidateAsync"></TextBox>
                    <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="6">
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="6">
                    <NumberField @bind-Value="@Model.BudgetUSD" Label="Budget, USD" Validate="Form.ValidateAsync"></NumberField>
                    <ValidationMessage For="() => Model.BudgetUSD" style="color:red; font-size:x-small;" />
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="6">
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="3">
                    <FluentSwitch Label="Show Details?" @bind-Value=Model.ShowDetails></FluentSwitch>
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="3">
                    @if (!Model.ShowDetails)
                    {
                        <FluentSwitch Label="Show Provisional Tag?" @bind-Value=@Model.ShowProvisionalTag></FluentSwitch>
                    }
                    else
                    {
                        <FluentLabel><strong>Tag : @Model.Tag</strong></FluentLabel>
                        <ValidationMessage For="() => Model.Tag" style="color:red; font-size:x-small;" />
                    }
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="6">

                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="3">
                    @if (Model.ShowProvisionalTag && !Model.ShowDetails)
                    {
                        <TextBox Label="Tag"
                                 @bind-Value=@Model.ProvisionalTag
                                 Placeholder="Define name"
                                 Validate="Form.ValidateAsync"></TextBox>
                        <ValidationMessage For="() => Model.ProvisionalTag" style="color:red; font-size:x-small;" />

                    }
                </FluentGridItem>
                <FluentGridItem xs="12" sm="12" md="9">

                </FluentGridItem>
               
            </FluentGrid>


            @if (Model.ShowDetails)
            {
                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;width:100%;">

                    <FluentGridItem xs="12" sm="12" md="6">
                        <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;">

                            <FluentGridItem xs="12" sm="12" md="6">
                                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 2px; width:100%;">
                                    <!-- Type and Sub Type -->
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Type"
                                                 @bind-Value=@Model.Type
                                                 Placeholder="Define type"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                        <ValidationMessage For="() => Model.Type" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Sub Type"
                                                 @bind-Value=@Model.SubType
                                                 Placeholder="Define Sub type"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Tag Letter"
                                                 @bind-Value=@Model.TagLetter
                                                 Placeholder="Define Tag Letter"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                        <ValidationMessage For="() => Model.TagLetter" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Tag Number"
                                                 @bind-Value=@Model.TagNumber
                                                 Placeholder="Define Tag Number"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                        <ValidationMessage For="() => Model.TagNumber" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <FluentSwitch Label="Is Existing?" @bind-Value=@Model.IsExisting></FluentSwitch>
                                    </FluentGridItem>

                                    <!-- Brand Selection -->

                                </FluentGrid>
                            </FluentGridItem>
                            <FluentGridItem xs="12" sm="12" md="6">
                                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;">
                                    <!-- Model and Reference -->
                                    <FluentGridItem xs="12">
                                        <FluentSelect TOption="BrandResponse"
                                                      Label="Select a Brand"
                                                      Items="@BrandsResponseList.Items"
                                                      Id="people-listbox"
                                                      Width="80%"
                                                      Height="auto"
                                                      Immediate="true"
                                                      @onchange=@ChangeSelect
                                                      Placeholder="Make a selection..."
                                                      OptionValue="@(p => p.Name)"
                                                      OptionText="@(p => p.Name)"
                                                      @bind-Value="@SelectedBrand"
                                                      @bind-SelectedOption="@Model.BrandResponse" />
                                        <ValidationMessage For="() => Model.Brand" style="color:red; font-size:x-small;" />
                                        <FluentButton Id="addB" OnClick="@AddBrand" IconEnd="@(new Icons.Regular.Size20.Add())"></FluentButton>
                                        <FluentTooltip Anchor="addB" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Brand</FluentTooltip>
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Model"
                                                 @bind-Value=@Model.Model
                                                 Placeholder="Define Model"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                        <ValidationMessage For="() => Model.Model" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <TextBox Label="Reference"
                                                 @bind-Value=@Model.Reference
                                                 Placeholder="Define Reference"
                                                 Validate="Form.ValidateAsync"></TextBox>
                                        <ValidationMessage For="() => Model.Reference" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>

                                    <!-- Material Selection -->
                                    <FluentGridItem xs="12">
                                        <FluentSelect TOption="MaterialEnum"
                                                      Label="Select Internal Material"
                                                      Items="@MaterialEnum.List"
                                                      Id="people-listbox"
                                                      Width="100%"
                                                      Height="350px"
                                                      @onchange=@ChangeInternalMaterial
                                                      Placeholder="Make a selection..."
                                                      OptionValue="@(p => p.Name)"
                                                      OptionText="@(p => p.Name)"
                                                      @bind-Value="@Model.InternalMaterial.Name"
                                                      @bind-SelectedOption="@Model.InternalMaterial" />
                                        <ValidationMessage For="() => Model.InternalMaterial" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                    <FluentGridItem xs="12">
                                        <FluentSelect TOption="MaterialEnum"
                                                      Label="Select External Material"
                                                      Items="@MaterialEnum.List"
                                                      Id="people-listbox"
                                                      Width="100%"
                                                      Height="350px"
                                                      @onchange=@ChangeExternalMaterial
                                                      Placeholder="Make a selection..."
                                                      OptionValue="@(p => p.Name)"
                                                      OptionText="@(p => p.Name)"
                                                      @bind-Value="@Model.ExternalMaterial.Name"
                                                      @bind-SelectedOption="@Model.ExternalMaterial" />
                                        <ValidationMessage For="() => Model.ExternalMaterial" style="color:red; font-size:x-small;" />
                                    </FluentGridItem>
                                </FluentGrid>
                            </FluentGridItem>
                        </FluentGrid>
                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="12" md="6">
                        <EquipmentTemplateList Items="@EquipmentTemplateResponseList.Items" SendToForm="GetFromTamplateList"></EquipmentTemplateList>
                    </FluentGridItem>
                </FluentGrid>
                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;width:100%;">
                    <FluentGridItem xs="12" sm="12" md="12">
                        <NozzleBudgetaryList @bind-Items=@Model.Nozzles Validate="Form.ValidateAsync"></NozzleBudgetaryList>
                        <ValidationMessage For="() => Model.Nozzles" style="color:red; font-size:x-small;" />
                    </FluentGridItem>
                </FluentGrid>
            }
        </FluentStack>

    </Content>

</CreateTemplate>

@code {
    CreateTemplate<CreateEquipmentRequest> Form = null!;
    int Spacing = 1;
    JustifyContent Justification = JustifyContent.SpaceBetween;

    void OnBreakpointEnterHandler(GridItemSize size)
    {

    }
    string? SelectedBrand;
    async Task ChangeSelect(ChangeEventArgs args)
    {
        if (args == null || args.Value == null) return;
        if (BrandsResponseList.Items.Any(x => x.Name == args.Value.ToString()))
        {
            Model.BrandResponse = BrandsResponseList.Items.Single(x => x.Name == args.Value.ToString());
            SelectedBrand = Model.Brand;
            await Form.ValidateAsync();
        }

    }
    async Task ChangeInternalMaterial(ChangeEventArgs args)
    {
        if (args == null) return;
        Model.InternalMaterial = MaterialEnum.GetType(args!.Value!.ToString()!);
        await Form.ValidateAsync();
    }
    async Task ChangeExternalMaterial(ChangeEventArgs args)
    {
        if (args == null) return;
        Model.ExternalMaterial = MaterialEnum.GetType(args!.Value!.ToString()!);
        await Form.ValidateAsync();
    }
}
