@page "/UpdateTaxs/{Id:guid}"
@using Shared.Models.BudgetItems.IndividualItems.Taxs.Requests
@using Shared.Models.BudgetItems.IndividualItems.Taxs.Responses




<EditTemplate @ref=Form TItem="UpdateTaxRequest" @bind-Model=@Model
              Title="Edit Tax">
    <Content>
        <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;width:100%">
            <FluentGridItem xs="12" sm="12" md="5">
                <FluentGrid Spacing="@Spacing" AdaptiveRendering="true" Justify="@Justification" Style="padding: 4px;width:100%">
                    <FluentGridItem xs="12" sm="12" md="12">
                        <TextBox Label="Name"
                                 @bind-Value="@Model.Name"
                                 Placeholder="Define name"
                                 Validate="Form.ValidateAsync"></TextBox>
                        <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
                    </FluentGridItem>

                    <FluentGridItem xs="12" sm="12" md="12">
                        <NumberField @bind-Value="@Model.Percentage" Label="%Percentage" Validate="Form.ValidateAsync"></NumberField>

                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="12" md="12">
                        <FluentLabel Typo="Typography.Body"><strong>Budget, $USD: @Model.sBudget</strong></FluentLabel>
                        <ValidationMessage For="() => Model.BudgetUSD" style="color:red; font-size:x-small;" />

                    </FluentGridItem>
                </FluentGrid>
            </FluentGridItem>
            <FluentGridItem xs="12" sm="12" md="7">
                <FluentGrid AdaptiveRendering="true" Justify="@Justification" Style="padding: 1px;width:100%;height:400px;overflow:auto">
                    <FluentGridItem xs="12" sm="1">
                        <FluentCheckbox Value=@SelectedAll ValueChanged="@((arg)=>OnSelectAll(arg))"></FluentCheckbox>
                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="2">
                        <FluentLabel><strong>Nomenclatore</strong></FluentLabel>
                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="6">
                        <FluentLabel><strong>Name</strong></FluentLabel>
                    </FluentGridItem>
                    <FluentGridItem xs="12" sm="3">
                        <FluentLabel><strong>Budget, USD</strong></FluentLabel>
                    </FluentGridItem>

                    @foreach (var row in taxItemResponseList.Items)
                    {
                        <FluentGridItem xs="12" sm="1">
                            <FluentCheckbox Value=@row.Selected ValueChanged="@((arg)=>OnValueChanged(row,arg))"></FluentCheckbox>
                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="2">
                            <FluentLabel>@row.Nomenclatore</FluentLabel>
                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="6">
                            <FluentLabel Style="overflow-wrap: break-word;">@row.Name</FluentLabel>
                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="3">
                            <FluentLabel>@row.Budget</FluentLabel>
                        </FluentGridItem>

                    }
                </FluentGrid>


            </FluentGridItem>
        </FluentGrid>
    </Content>

</EditTemplate>

@code {
    EditTemplate<UpdateTaxRequest> Form = null!;
    private int Spacing = 1;
    private JustifyContent Justification = JustifyContent.FlexStart;

    bool SelectedAll = false;

    async Task OnValueChanged(TaxItemResponse item, bool selected)
    {
        item.Selected = selected;
        Model.TaxItems = taxItemResponseList.Items.Where(x => x.Selected).ToList();
        await Form.ValidateAsync();
    }

    async Task OnSelectAll(bool all)
    {
        taxItemResponseList.Items.ForEach(p => p.Selected = all);
        Model.TaxItems = taxItemResponseList.Items.Where(x => x.Selected).ToList();
        SelectedAll = all;
        await Form.ValidateAsync();
    }
}
