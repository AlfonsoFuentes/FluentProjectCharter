@page "/UpdateMeetingAttendant/{Id:guid}"

@* 
<EditTemplate @ref=Form TItem="UpdateMeetingAttendantRequest" @bind-Model=@Model 
              Title="Edit Attendant">
    <Content>
      <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center">
            <FluentStack Orientation="Orientation.Horizontal">
                <FluentSelect TOption="StakeHolderResponse"
                              Label="Select a Attendant"
                              Items="@StakeHolderResponseList.Items"
                              Id="people-listbox"
                              Immediate="true"
                              @onchange="ChangeManager"
                              Placeholder="Make a selection..."
                              OptionValue="@(p => p.Name)"
                              OptionText="@(p => p.Name)"
                              @bind-Value="@stakeholder"
                              @bind-SelectedOption="@Model.StakeHolder" />
                <MudButton  Id="addmanager" IconEnd="@(new Icons.Regular.Size20.Add())" OnClick="@(()=>AddStakeHolder())">

                </MudButton >
                <FluentTooltip Anchor="addmanager" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Attendant</FluentTooltip>

            </FluentStack>
            <ValidationMessage For="() => Model.StakeHolder" style="color:red; font-size:x-small;" />


        </FluentStack>



    </Content>

</EditTemplate> *@

@code {
    // EditTemplate<UpdateMeetingAttendantRequest> Form = null!;
    // string? stakeholder;
    // async Task ChangeManager(ChangeEventArgs args)
    // {
    //     if (args == null || args.Value == null) return;
    //     if (StakeHolderResponseList.Items.Any(x => x.Name == args.Value.ToString()))
    //     {
    //         Model.StakeHolder = StakeHolderResponseList.Items.Single(x => x.Name == args.Value.ToString());
    //         stakeholder = args.Value.ToString();
    //         await Form.ValidateAsync();
    //     }

    // }
}
