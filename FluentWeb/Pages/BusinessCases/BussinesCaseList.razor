@using FluentWeb.Pages.BackGrounds
@using FluentWeb.Pages.DecissionCriterias
@using FluentWeb.Pages.KnownRisks
@using FluentWeb.Pages.OrganizationStrategys
@using FluentWeb.Pages.Scopes
@using FluentWeb.Pages.StakeHolders
@using FluentWeb.Pages.SucessfullFactors
@using Shared.Models.Cases.Requests
@using Shared.Models.OrganizationStrategies.Responses
<FluentStack Orientation="Orientation.Vertical" Style="width:100%">
    <FluentStack Orientation=" Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="6">
        <FluentButton Id="addcase" IconEnd="@(new Icons.Regular.Size20.Add())" OnClick="AddNew">

        </FluentButton>
        <FluentTooltip Anchor="addcase" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Case</FluentTooltip>

        <FluentLabel Typo="Typography.Subject" Style="overflow-wrap: break-word;"><strong>Manage busines cases</strong></FluentLabel>
        <FluentSpacer />
        <FluentSearch @bind-Value="@nameFilter"
                      @oninput="@((arg)=>nameFilter=arg.Value==null?string.Empty:arg.Value!.ToString())"
                      Placeholder="Search..." />
    </FluentStack>
    @if (CreateResponse != null)
    {
        <CreateTemplate @ref=CreateForm TItem="CreateCaseRequest" @bind-Model="@CreateResponse"
                        Cancel="CancelAsync" GetAll="GetAll" Title="Create Business Case">
            <Content>
                <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
                    <TextArea Label="Name"
                              @bind-Value=@CreateResponse.Name
                              Placeholder="Define name"
                              Validate="CreateForm.ValidateAsync"></TextArea>
                    <ValidationMessage For="() => CreateResponse.Name" style="color:red; font-size:x-small;" />
                    <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
                        <FluentSelect TOption="OrganizationStrategyResponse"
                                      Label="Select a Strategy"
                                      Items="@OrganizationResponse.Items"
                                      Id="people-listbox"
                                      Width="80%"
                                      Height="350px"
                                      Placeholder="Make a selection..."
                                      OptionValue="@(p => p.Name)"
                                      OptionText="@(p => p.Name)"
                                      @bind-Value="@SelectedValue"
                                      @bind-SelectedOption="@CreateResponse.OrganizationStrategy" />

                        <FluentButton Id="addorgan" IconEnd="@(new Icons.Regular.Size20.Add())" OnClick="AddOrganizationStrategy">

                        </FluentButton>
                        <FluentTooltip Anchor="addorgan" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Organization Strategy</FluentTooltip>

                    </FluentStack>



                </FluentStack>
            </Content>

        </CreateTemplate>

    }
    @if (CreateOrganizationStrategyRequest != null)
    {
        <CreateOrganizacionStrategy Cancel="CancelOrganizationStrategy" GetAll="UpdateOrganizationStrategy"
                                    SendData="GetOrganizationStrategyFromCreate"></CreateOrganizacionStrategy>
    }
    <FluentAccordion Style="width:100%" ExpandMode="AccordionExpandMode.Multi">
        @foreach (var row in FilteredItems)
        {
            @if (EditResponse != null && EditResponse.Id == row.Id)
            {
                <EditTemplate @ref=EditForm TItem="UpdateCaseRequest" @bind-Model=@EditResponse Cancel="CancelAsync"
                              GetAll="GetAll" Title="Edit Business Case">
                    <Content>
                        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
                            <TextArea Label="Name"
                                      @bind-Value=@EditResponse.Name
                                      Placeholder="Define name"
                                      Validate="CreateForm.ValidateAsync"></TextArea>
                            <ValidationMessage For="() => EditResponse.Name" style="color:red; font-size:x-small;" />
                            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
                                <FluentSelect TOption="OrganizationStrategyResponse"
                                              Label="Select a Strategy"
                                              Items="@OrganizationResponse.Items"
                                              Id="people-listbox"
                                              Width="80%"
                                              Height="350px"
                                              Placeholder="Make a selection..."
                                              OptionValue="@(p => p.Name)"
                                              OptionText="@(p => p.Name)"
                                              @bind-Value="@SelectedValue"
                                              @bind-SelectedOption="@EditResponse.OrganizationStrategy" />

                                <FluentButton Id="addorgan" IconEnd="@(new Icons.Regular.Size20.Add())" OnClick="AddOrganizationStrategy">

                                </FluentButton>
                                <FluentTooltip Anchor="addorgan" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Organization Strategy</FluentTooltip>

                            </FluentStack>



                        </FluentStack>
                       

                    </Content>

                </EditTemplate>

            }
            else
            {
                <FluentAccordionItem>
                    <HeadingTemplate>
                        <FluentStack Orientation=" Orientation.Horizontal">
                            <FluentLabel Typo="Typography.Body" Style="overflow-wrap: break-word;">@row.Name</FluentLabel>
                            <FluentSpacer />
                            <div>
                                <FluentButton Id="editcase" IconEnd="@(new Icons.Regular.Size20.Edit())" OnClick="@(()=>Edit(row))">

                                </FluentButton>
                                @* <FluentTooltip Anchor="editcase" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Edit</FluentTooltip> *@
                                <FluentButton Id="deletecase" IconEnd="@(new Icons.Regular.Size20.Delete())" OnClick="@(()=>Delete(row))">

                                </FluentButton>
                                @* <FluentTooltip Anchor="deletecase" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Delete</FluentTooltip> *@


                            </div>
                        </FluentStack>

                    </HeadingTemplate>
                    <ChildContent>
                        <FluentTabs ShowActiveIndicator="true">
                            <FluentTab Label="Backgrounds">
                                <Content>
                                    <BackGroundList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></BackGroundList>
                                </Content>

                            </FluentTab>
                            <FluentTab Label="Stakeholders">
                                <Content>
                                    <StakeHolderList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></StakeHolderList>
                                </Content>

                            </FluentTab>
                            <FluentTab Label="Scope">
                                <Content>
                                    <ScopeList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></ScopeList>
                                </Content>

                            </FluentTab>
                            <FluentTab Label="Known risks">
                                <Content>
                                    <KnownRiskList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></KnownRiskList>
                                </Content>

                            </FluentTab>
                            <FluentTab Label="Sucessfull factors">
                                <Content>
                                    <SucessfullFactorList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></SucessfullFactorList>
                                </Content>

                            </FluentTab>
                            <FluentTab Label="Decission criterias">
                                <Content>
                                    <DecissionCriteriaList GetAll="GetAll" Cancel="CancelAsync" Parent="@row"></DecissionCriteriaList>
                                </Content>

                            </FluentTab>
                        </FluentTabs>
                    </ChildContent>
                </FluentAccordionItem>
            }

        }

    </FluentAccordion>


</FluentStack>

@code {

    CreateTemplate<CreateCaseRequest> CreateForm = null!;
    EditTemplate<UpdateCaseRequest> EditForm = null!;

    string? SelectedValue;


}
