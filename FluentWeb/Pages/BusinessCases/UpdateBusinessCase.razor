@page "/UpdateCase/{Id:guid}/{ProjectId:guid}"
<EditTemplate @ref=EditForm TItem="UpdateCaseRequest" @bind-Model=@Model 
             Title="Edit Business Case">
    <Content>
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="4" Width="100%">
            <FluentSelect TOption="OrganizationStrategyResponse"
                          Label="Select a Strategy"
                          Items="@OrganizationResponse.Items"
                          Id="people-listbox"
                          Width="60%"
                          Height="auto"
                          Position="SelectPosition.Below"
                          Immediate="true"
                          Style="z-index:99"
                          @onchange=@ChangeSelect
                          Placeholder="Make a selection..."
                          OptionValue="@(p => p.Name)"
                          OptionText="@(p => p.Name)"
                          @bind-Value="@SelectedValue"
                          @bind-SelectedOption="@Model.OrganizationStrategy" />

            <FluentButton Id="addorgan" IconEnd="@(new Icons.Regular.Size20.Add())" OnClick="AddOrganizationStrategy">

            </FluentButton>
            <FluentTooltip Anchor="addorgan" HideTooltipOnCursorLeave="true" Position=TooltipPosition.Top Delay=200>Add Organization Strategy</FluentTooltip>

        </FluentStack>
        <ValidationMessage For="() => Model.OrganizationStrategy" style="color:red; font-size:x-small;" />
        <TextArea Label="Name"
                  @bind-Value=@Model.Name
                  Placeholder="Define name"
                  Validate="EditForm.ValidateAsync"></TextArea>
        <ValidationMessage For="() => Model.Name" style="color:red; font-size:x-small;" />
        @if (debug)
        {

        }
      
    </Content>

</EditTemplate>

@code {
    bool debug = true;
    EditTemplate<UpdateCaseRequest> EditForm = null!;
    string? SelectedValue;
    async Task ChangeSelect(ChangeEventArgs args)
    {
        if (args == null || args.Value == null) return;
        if (OrganizationResponse.Items.Any(x => x.Name == args.Value.ToString()))
        {
            Model.OrganizationStrategy = OrganizationResponse.Items.Single(x => x.Name == args.Value.ToString());
            SelectedValue = args.Value.ToString();
            await EditForm.ValidateAsync();
        }

    }
}
